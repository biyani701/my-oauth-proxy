// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  provider      String?   // The provider used for authentication
  clientOrigin  String?   // The origin of the client that created this user
  clientId      String?   // The client identifier (default, client1, client2, etc.)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
}

// Account model (linked to OAuth providers)
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  clientOrigin      String? // The origin of the client that created this account

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Session model
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  clientOrigin String?  // The origin of the client that created this session
  clientId     String?  // The client identifier (default, client1, client2, etc.)
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// VerificationToken model for email verification
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ClientOrigin model to store allowed client origins
model ClientOrigin {
  id          String   @id @default(cuid())
  origin      String   @unique
  clientId    String   // The client identifier (default, client1, client2, etc.)
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
